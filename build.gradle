plugins {
    id "java"
    id "org.springframework.boot" version "3.3.1"
    id "io.spring.dependency-management" version "1.1.4"
}

group = "com.cloud.stream"
version = "0.0.1-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set("springCloudVersion", "2023.0.1")
    set("springWolfVersion", "1.5.0")
    set("springDocVersion", "2.5.0")
}

dependencies {
    implementation("org.springframework.cloud:spring-cloud-stream")
    implementation("org.springframework.cloud:spring-cloud-stream-binder-kafka")
    implementation("org.springframework.kafka:spring-kafka")
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation("org.springframework.boot:spring-boot-starter-undertow")

    // ASYNC API
    implementation("io.github.springwolf:springwolf-kafka:${springWolfVersion}")
    runtimeOnly("io.github.springwolf:springwolf-ui:${springWolfVersion}")
    runtimeOnly("io.github.springwolf:springwolf-cloud-stream:${springWolfVersion}")
    annotationProcessor("io.github.springwolf:springwolf-cloud-stream:${springWolfVersion}")

    // OPEN API
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.cloud:spring-cloud-stream-test-binder")
    testImplementation("org.springframework.kafka:spring-kafka-test")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named("test") {
    useJUnitPlatform()
}

tasks.processResources {
    filesMatching("**/application.yaml") {
        expand(
            name: rootProject.name,
            version: rootProject.version
        )
    }
}
